yarn run v1.22.17
$ next build
info  - SWC minify release candidate enabled. https://nextjs.link/swcmin
info  - Linting and checking validity of types...

./pages/gnosis/[addr].js
563:11  Warning: Do not use `<img>` element. Use `<Image />` from `next/image` instead. See: https://nextjs.org/docs/messages/no-img-element  @next/next/no-img-element
563:11  Warning: img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.  jsx-a11y/alt-text

./pages/overviewpage/[name].js
88:6  Warning: React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.  react-hooks/exhaustive-deps

./components/HomeModule.js
155:9  Warning: Do not use `<img>` element. Use `<Image />` from `next/image` instead. See: https://nextjs.org/docs/messages/no-img-element  @next/next/no-img-element
155:9  Warning: img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.  jsx-a11y/alt-text

./components/Navbar.js
31:13  Warning: Do not use `<img>` element. Use `<Image />` from `next/image` instead. See: https://nextjs.org/docs/messages/no-img-element  @next/next/no-img-element
31:13  Warning: img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.  jsx-a11y/alt-text

info  - Need to disable some ESLint rules? Learn more here: https://nextjs.org/docs/basic-features/eslint#disabling-rules
info  - Creating an optimized production build...
info  - Compiled successfully
info  - Collecting page data...
warn  - "next" should not be imported directly, imported in /Users/umphaipunatipunumphai/Documents/blockcamp2/.next/server/pages/overviewpage/[name].js
See more info here: https://nextjs.org/docs/messages/import-next
info  - Generating static pages (0/12)

Error occurred prerendering page "/overviewpage". Read more: https://nextjs.org/docs/messages/prerender-error
Error: The provided export path '/overviewpage' doesn't match the '/overviewpage/[name]' page.
Read more: https://nextjs.org/docs/messages/export-path-mismatch
    at /Users/umphaipunatipunumphai/Documents/blockcamp2/node_modules/next/dist/export/worker.js:80:27
    at Span.traceAsyncFn (/Users/umphaipunatipunumphai/Documents/blockcamp2/node_modules/next/dist/trace/trace.js:79:26)
    at Object.exportPage (/Users/umphaipunatipunumphai/Documents/blockcamp2/node_modules/next/dist/export/worker.js:28:27)
    at execFunction (/Users/umphaipunatipunumphai/Documents/blockcamp2/node_modules/next/dist/compiled/jest-worker/processChild.js:1:2828)
    at execHelper (/Users/umphaipunatipunumphai/Documents/blockcamp2/node_modules/next/dist/compiled/jest-worker/processChild.js:1:2486)
    at execMethod (/Users/umphaipunatipunumphai/Documents/blockcamp2/node_modules/next/dist/compiled/jest-worker/processChild.js:1:2574)
    at process.messageListener (/Users/umphaipunatipunumphai/Documents/blockcamp2/node_modules/next/dist/compiled/jest-worker/processChild.js:1:1284)
    at process.emit (node:events:520:28)
    at emit (node:internal/child_process:938:14)
    at processTicksAndRejections (node:internal/process/task_queues:84:21)
warn  - "next" should not be imported directly, imported in /Users/umphaipunatipunumphai/Documents/blockcamp2/.next/server/pages/overviewpage/[name].js
See more info here: https://nextjs.org/docs/messages/import-next
info  - Generating static pages (3/12)

Error occurred prerendering page "/gnosis". Read more: https://nextjs.org/docs/messages/prerender-error
Error: The provided export path '/gnosis' doesn't match the '/gnosis/[addr]' page.
Read more: https://nextjs.org/docs/messages/export-path-mismatch
    at /Users/umphaipunatipunumphai/Documents/blockcamp2/node_modules/next/dist/export/worker.js:80:27
    at Span.traceAsyncFn (/Users/umphaipunatipunumphai/Documents/blockcamp2/node_modules/next/dist/trace/trace.js:79:26)
    at Object.exportPage (/Users/umphaipunatipunumphai/Documents/blockcamp2/node_modules/next/dist/export/worker.js:28:27)
    at execFunction (/Users/umphaipunatipunumphai/Documents/blockcamp2/node_modules/next/dist/compiled/jest-worker/processChild.js:1:2828)
    at execHelper (/Users/umphaipunatipunumphai/Documents/blockcamp2/node_modules/next/dist/compiled/jest-worker/processChild.js:1:2486)
    at execMethod (/Users/umphaipunatipunumphai/Documents/blockcamp2/node_modules/next/dist/compiled/jest-worker/processChild.js:1:2574)
    at process.messageListener (/Users/umphaipunatipunumphai/Documents/blockcamp2/node_modules/next/dist/compiled/jest-worker/processChild.js:1:1284)
    at process.emit (node:events:520:28)
    at emit (node:internal/child_process:938:14)
    at processTicksAndRejections (node:internal/process/task_queues:84:21)
warn  - "next" should not be imported directly, imported in /Users/umphaipunatipunumphai/Documents/blockcamp2/.next/server/pages/overviewpage/[name].js
See more info here: https://nextjs.org/docs/messages/import-next
info  - Generating static pages (6/12)
[Module: null prototype] {
  Adder: [class Adder],
  Delaunay: [class Delaunay],
  FormatSpecifier: [Function: FormatSpecifier],
  InternMap: [class InternMap extends Map],
  InternSet: [class InternSet extends Set],
  Node: [Function: Node],
  Voronoi: [class Voronoi],
  ZoomTransform: [Function: Transform],
  active: [Function: default],
  arc: [Function: default],
  area: [Function: default],
  areaRadial: [Function: default],
  ascending: [Function: ascending],
  autoType: [Function: autoType],
  axisBottom: [Function: axisBottom],
  axisLeft: [Function: axisLeft],
  axisRight: [Function: axisRight],
  axisTop: [Function: axisTop],
  bin: [Function: bin],
  bisect: [Function: right],
  bisectCenter: [Function: center],
  bisectLeft: [Function: left],
  bisectRight: [Function: right],
  bisector: [Function: bisector],
  blob: [Function: default],
  blur: [Function: blur],
  blur2: [Function (anonymous)],
  blurImage: [Function (anonymous)],
  brush: [Function: default],
  brushSelection: [Function: brushSelection],
  brushX: [Function: brushX],
  brushY: [Function: brushY],
  buffer: [Function: default],
  chord: [Function: default],
  chordDirected: [Function: chordDirected],
  chordTranspose: [Function: chordTranspose],
  cluster: [Function: default],
  color: [Function: color],
  contourDensity: [Function: default],
  contours: [Function: default],
  count: [Function: count],
  create: [Function: default],
  creator: [Function: default],
  cross: [Function: cross],
  csv: [Function (anonymous)],
  csvFormat: [Function: format],
  csvFormatBody: [Function: formatBody],
  csvFormatRow: [Function: formatRow],
  csvFormatRows: [Function: formatRows],
  csvFormatValue: [Function: formatValue],
  csvParse: [Function: parse],
  csvParseRows: [Function: parseRows],
  cubehelix: [Function: cubehelix],
  cumsum: [Function: cumsum],
  curveBasis: [Function: default],
  curveBasisClosed: [Function: default],
  curveBasisOpen: [Function: default],
  curveBumpX: [Function: bumpX],
  curveBumpY: [Function: bumpY],
  curveBundle: [Function: bundle] { beta: [Function (anonymous)] },
  curveCardinal: [Function: cardinal] { tension: [Function (anonymous)] },
  curveCardinalClosed: [Function: cardinal] { tension: [Function (anonymous)] },
  curveCardinalOpen: [Function: cardinal] { tension: [Function (anonymous)] },
  curveCatmullRom: [Function: catmullRom] { alpha: [Function (anonymous)] },
  curveCatmullRomClosed: [Function: catmullRom] { alpha: [Function (anonymous)] },
  curveCatmullRomOpen: [Function: catmullRom] { alpha: [Function (anonymous)] },
  curveLinear: [Function: default],
  curveLinearClosed: [Function: default],
  curveMonotoneX: [Function: monotoneX],
  curveMonotoneY: [Function: monotoneY],
  curveNatural: [Function: default],
  curveStep: [Function: default],
  curveStepAfter: [Function: stepAfter],
  curveStepBefore: [Function: stepBefore],
  descending: [Function: descending],
  deviation: [Function: deviation],
  difference: [Function: difference],
  disjoint: [Function: disjoint],
  dispatch: [Function: dispatch],
  drag: [Function: default],
  dragDisable: [Function: default],
  dragEnable: [Function: yesdrag],
  dsv: [Function: dsv],
  dsvFormat: [Function: default],
  easeBack: [Function: backInOut] { overshoot: [Function: custom] },
  easeBackIn: [Function: backIn] { overshoot: [Function: custom] },
  easeBackInOut: [Function: backInOut] { overshoot: [Function: custom] },
  easeBackOut: [Function: backOut] { overshoot: [Function: custom] },
  easeBounce: [Function: bounceOut],
  easeBounceIn: [Function: bounceIn],
  easeBounceInOut: [Function: bounceInOut],
  easeBounceOut: [Function: bounceOut],
  easeCircle: [Function: circleInOut],
  easeCircleIn: [Function: circleIn],
  easeCircleInOut: [Function: circleInOut],
  easeCircleOut: [Function: circleOut],
  easeCubic: [Function: cubicInOut],
  easeCubicIn: [Function: cubicIn],
  easeCubicInOut: [Function: cubicInOut],
  easeCubicOut: [Function: cubicOut],
  easeElastic: [Function: elasticOut] {
    amplitude: [Function (anonymous)],
    period: [Function (anonymous)]
  },
  easeElasticIn: [Function: elasticIn] {
    amplitude: [Function (anonymous)],
    period: [Function (anonymous)]
  },
  easeElasticInOut: [Function: elasticInOut] {
    amplitude: [Function (anonymous)],
    period: [Function (anonymous)]
  },
  easeElasticOut: [Function: elasticOut] {
    amplitude: [Function (anonymous)],
    period: [Function (anonymous)]
  },
  easeExp: [Function: expInOut],
  easeExpIn: [Function: expIn],
  easeExpInOut: [Function: expInOut],
  easeExpOut: [Function: expOut],
  easeLinear: [Function: linear],
  easePoly: [Function: polyInOut] { exponent: [Function: custom] },
  easePolyIn: [Function: polyIn] { exponent: [Function: custom] },
  easePolyInOut: [Function: polyInOut] { exponent: [Function: custom] },
  easePolyOut: [Function: polyOut] { exponent: [Function: custom] },
  easeQuad: [Function: quadInOut],
  easeQuadIn: [Function: quadIn],
  easeQuadInOut: [Function: quadInOut],
  easeQuadOut: [Function: quadOut],
  easeSin: [Function: sinInOut],
  easeSinIn: [Function: sinIn],
  easeSinInOut: [Function: sinInOut],
  easeSinOut: [Function: sinOut],
  every: [Function: every],
  extent: [Function: extent],
  fcumsum: [Function: fcumsum],
  filter: [Function: filter],
  flatGroup: [Function: flatGroup],
  flatRollup: [Function: flatRollup],
  forceCenter: [Function: default],
  forceCollide: [Function: default],
  forceLink: [Function: default],
  forceManyBody: [Function: default],
  forceRadial: [Function: default],
  forceSimulation: [Function: default],
  forceX: [Function: default],
  forceY: [Function: default],
  format: [Function: newFormat],
  formatDefaultLocale: [Function: defaultLocale],
  formatLocale: [Function: default],
  formatPrefix: [Function: formatPrefix],
  formatSpecifier: [Function: formatSpecifier],
  fsum: [Function: fsum],
  geoAlbers: [Function: default],
  geoAlbersUsa: [Function: default],
  geoArea: [Function: default],
  geoAzimuthalEqualArea: [Function: default],
  geoAzimuthalEqualAreaRaw: [Function (anonymous)] { invert: [Function (anonymous)] },
  geoAzimuthalEquidistant: [Function: default],
  geoAzimuthalEquidistantRaw: [Function (anonymous)] { invert: [Function (anonymous)] },
  geoBounds: [Function: default],
  geoCentroid: [Function: default],
  geoCircle: [Function: default],
  geoClipAntimeridian: [Function (anonymous)],
  geoClipCircle: [Function: default],
  geoClipExtent: [Function: default],
  geoClipRectangle: [Function: clipRectangle],
  geoConicConformal: [Function: default],
  geoConicConformalRaw: [Function: conicConformalRaw],
  geoConicEqualArea: [Function: default],
  geoConicEqualAreaRaw: [Function: conicEqualAreaRaw],
  geoConicEquidistant: [Function: default],
  geoConicEquidistantRaw: [Function: conicEquidistantRaw],
  geoContains: [Function: default],
  geoDistance: [Function: default],
  geoEqualEarth: [Function: default],
  geoEqualEarthRaw: [Function: equalEarthRaw] { invert: [Function (anonymous)] },
  geoEquirectangular: [Function: default],
  geoEquirectangularRaw: <ref *1> [Function: equirectangularRaw] { invert: [Circular *1] },
  geoGnomonic: [Function: default],
  geoGnomonicRaw: [Function: gnomonicRaw] { invert: [Function (anonymous)] },
  geoGraticule: [Function: graticule],
  geoGraticule10: [Function: graticule10],
  geoIdentity: [Function: default],
  geoInterpolate: [Function: default],
  geoLength: [Function: default],
  geoMercator: [Function: default],
  geoMercatorRaw: [Function: mercatorRaw] { invert: [Function (anonymous)] },
  geoNaturalEarth1: [Function: default],
  geoNaturalEarth1Raw: [Function: naturalEarth1Raw] { invert: [Function (anonymous)] },
  geoOrthographic: [Function: default],
  geoOrthographicRaw: [Function: orthographicRaw] { invert: [Function (anonymous)] },
  geoPath: [Function: default],
  geoProjection: [Function: projection],
  geoProjectionMutator: [Function: projectionMutator],
  geoRotation: [Function: default],
  geoStereographic: [Function: default],
  geoStereographicRaw: [Function: stereographicRaw] { invert: [Function (anonymous)] },
  geoStream: [Function: default],
  geoTransform: [Function: default],
  geoTransverseMercator: [Function: default],
  geoTransverseMercatorRaw: [Function: transverseMercatorRaw] { invert: [Function (anonymous)] },
  gray: [Function: gray],
  greatest: [Function: greatest],
  greatestIndex: [Function: greatestIndex],
  group: [Function: group],
  groupSort: [Function: groupSort],
  groups: [Function: groups],
  hcl: [Function: hcl],
  hierarchy: [Function: hierarchy],
  histogram: [Function: bin],
  hsl: [Function: hsl],
  html: [Function (anonymous)],
  image: [Function: default],
  index: [Function: index],
  indexes: [Function: indexes],
  interpolate: [Function: default],
  interpolateArray: [Function: default],
  interpolateBasis: [Function: default],
  interpolateBasisClosed: [Function: default],
  interpolateBlues: [Function (anonymous)],
  interpolateBrBG: [Function (anonymous)],
  interpolateBuGn: [Function (anonymous)],
  interpolateBuPu: [Function (anonymous)],
  interpolateCividis: [Function: default],
  interpolateCool: [Function (anonymous)],
  interpolateCubehelix: [Function: cubehelix] { gamma: [Function: cubehelixGamma] },
  interpolateCubehelixDefault: [Function (anonymous)],
  interpolateCubehelixLong: [Function: cubehelix] { gamma: [Function: cubehelixGamma] },
  interpolateDate: [Function: default],
  interpolateDiscrete: [Function: default],
  interpolateGnBu: [Function (anonymous)],
  interpolateGreens: [Function (anonymous)],
  interpolateGreys: [Function (anonymous)],
  interpolateHcl: [Function (anonymous)],
  interpolateHclLong: [Function (anonymous)],
  interpolateHsl: [Function (anonymous)],
  interpolateHslLong: [Function (anonymous)],
  interpolateHue: [Function: default],
  interpolateInferno: [Function (anonymous)],
  interpolateLab: [Function: lab],
  interpolateMagma: [Function (anonymous)],
  interpolateNumber: [Function: default],
  interpolateNumberArray: [Function: default],
  interpolateObject: [Function: default],
  interpolateOrRd: [Function (anonymous)],
  interpolateOranges: [Function (anonymous)],
  interpolatePRGn: [Function (anonymous)],
  interpolatePiYG: [Function (anonymous)],
  interpolatePlasma: [Function (anonymous)],
  interpolatePuBu: [Function (anonymous)],
  interpolatePuBuGn: [Function (anonymous)],
  interpolatePuOr: [Function (anonymous)],
  interpolatePuRd: [Function (anonymous)],
  interpolatePurples: [Function (anonymous)],
  interpolateRainbow: [Function: default],
  interpolateRdBu: [Function (anonymous)],
  interpolateRdGy: [Function (anonymous)],
  interpolateRdPu: [Function (anonymous)],
  interpolateRdYlBu: [Function (anonymous)],
  interpolateRdYlGn: [Function (anonymous)],
  interpolateReds: [Function (anonymous)],
  interpolateRgb: [Function: rgb] { gamma: [Function: rgbGamma] },
  interpolateRgbBasis: [Function (anonymous)],
  interpolateRgbBasisClosed: [Function (anonymous)],
  interpolateRound: [Function: default],
  interpolateSinebow: [Function: default],
  interpolateSpectral: [Function (anonymous)],
  interpolateString: [Function: default],
  interpolateTransformCss: [Function (anonymous)],
  interpolateTransformSvg: [Function (anonymous)],
  interpolateTurbo: [Function: default],
  interpolateViridis: [Function (anonymous)],
  interpolateWarm: [Function (anonymous)],
  interpolateYlGn: [Function (anonymous)],
  interpolateYlGnBu: [Function (anonymous)],
  interpolateYlOrBr: [Function (anonymous)],
  interpolateYlOrRd: [Function (anonymous)],
  interpolateZoom: [Function: zoom] { rho: [Function (anonymous)] },
  interrupt: [Function: default],
  intersection: [Function: intersection],
  interval: [Function: default],
  isoFormat: [Function: formatIsoNative],
  isoParse: [Function: parseIsoNative],
  json: [Function: default],
  lab: [Function: lab],
  lch: [Function: lch],
  least: [Function: least],
  leastIndex: [Function: leastIndex],
  line: [Function: default],
  lineRadial: [Function: default],
  link: [Function: link],
  linkHorizontal: [Function: linkHorizontal],
  linkRadial: [Function: linkRadial],
  linkVertical: [Function: linkVertical],
  local: [Function: local],
  map: [Function: map],
  matcher: [Function: default],
  max: [Function: max],
  maxIndex: [Function: maxIndex],
  mean: [Function: mean],
  median: [Function: median],
  medianIndex: [Function: medianIndex],
  merge: [Function: merge],
  min: [Function: min],
  minIndex: [Function: minIndex],
  mode: [Function: mode],
  namespace: [Function: default],
  namespaces: {
    svg: 'http://www.w3.org/2000/svg',
    xhtml: 'http://www.w3.org/1999/xhtml',
    xlink: 'http://www.w3.org/1999/xlink',
    xml: 'http://www.w3.org/XML/1998/namespace',
    xmlns: 'http://www.w3.org/2000/xmlns/'
  },
  nice: [Function: nice],
  now: [Function: now],
  pack: [Function: default],
  packEnclose: [Function: default],
  packSiblings: [Function: default],
  pairs: [Function: pairs],
  partition: [Function: default],
  path: [Function: path],
  permute: [Function: permute],
  pie: [Function: default],
  piecewise: [Function: piecewise],
  pointRadial: [Function: default],
  pointer: [Function: default],
  pointers: [Function: default],
  polygonArea: [Function: default],
  polygonCentroid: [Function: default],
  polygonContains: [Function: default],
  polygonHull: [Function: default],
  polygonLength: [Function: default],
  precisionFixed: [Function: default],
  precisionPrefix: [Function: default],
  precisionRound: [Function: default],
  quadtree: [Function: quadtree],
  quantile: [Function: quantile],
  quantileIndex: [Function: quantileIndex],
  quantileSorted: [Function: quantileSorted],
  quantize: [Function: default],
  quickselect: [Function: quickselect],
  radialArea: [Function: default],
  radialLine: [Function: default],
  randomBates: [Function: randomBates] { source: [Function: sourceRandomBates] },
  randomBernoulli: [Function: randomBernoulli] {
    source: [Function: sourceRandomBernoulli]
  },
  randomBeta: [Function: randomBeta] { source: [Function: sourceRandomBeta] },
  randomBinomial: [Function: randomBinomial] {
    source: [Function: sourceRandomBinomial]
  },
  randomCauchy: [Function: randomCauchy] { source: [Function: sourceRandomCauchy] },
  randomExponential: [Function: randomExponential] {
    source: [Function: sourceRandomExponential]
  },
  randomGamma: [Function: randomGamma] { source: [Function: sourceRandomGamma] },
  randomGeometric: [Function: randomGeometric] {
    source: [Function: sourceRandomGeometric]
  },
  randomInt: [Function: randomInt] { source: [Function: sourceRandomInt] },
  randomIrwinHall: [Function: randomIrwinHall] {
    source: [Function: sourceRandomIrwinHall]
  },
  randomLcg: [Function: lcg],
  randomLogNormal: [Function: randomLogNormal] {
    source: [Function: sourceRandomLogNormal]
  },
  randomLogistic: [Function: randomLogistic] {
    source: [Function: sourceRandomLogistic]
  },
  randomNormal: [Function: randomNormal] { source: [Function: sourceRandomNormal] },
  randomPareto: [Function: randomPareto] { source: [Function: sourceRandomPareto] },
  randomPoisson: [Function: randomPoisson] { source: [Function: sourceRandomPoisson] },
  randomUniform: [Function: randomUniform] { source: [Function: sourceRandomUniform] },
  randomWeibull: [Function: randomWeibull] { source: [Function: sourceRandomWeibull] },
  range: [Function: range],
  rank: [Function: rank],
  reduce: [Function: reduce],
  reverse: [Function: reverse],
  rgb: [Function: rgb],
  ribbon: [Function: default],
  ribbonArrow: [Function: ribbonArrow],
  rollup: [Function: rollup],
  rollups: [Function: rollups],
  scaleBand: [Function: band],
  scaleDiverging: [Function: diverging],
  scaleDivergingLog: [Function: divergingLog],
  scaleDivergingPow: [Function: divergingPow],
  scaleDivergingSqrt: [Function: divergingSqrt],
  scaleDivergingSymlog: [Function: divergingSymlog],
  scaleIdentity: [Function: identity],
  scaleImplicit: Symbol(implicit),
  scaleLinear: [Function: linear],
  scaleLog: [Function: log],
  scaleOrdinal: [Function: ordinal],
  scalePoint: [Function: point],
  scalePow: [Function: pow],
  scaleQuantile: [Function: quantile],
  scaleQuantize: [Function: quantize],
  scaleRadial: [Function: radial],
  scaleSequential: [Function: sequential],
  scaleSequentialLog: [Function: sequentialLog],
  scaleSequentialPow: [Function: sequentialPow],
  scaleSequentialQuantile: [Function: sequentialQuantile],
  scaleSequentialSqrt: [Function: sequentialSqrt],
  scaleSequentialSymlog: [Function: sequentialSymlog],
  scaleSqrt: [Function: sqrt],
  scaleSymlog: [Function: symlog],
  scaleThreshold: [Function: threshold],
  scaleTime: [Function: time],
  scaleUtc: [Function: utcTime],
  scan: [Function: scan],
  schemeAccent: [
    '#7fc97f', '#beaed4',
    '#fdc086', '#ffff99',
    '#386cb0', '#f0027f',
    '#bf5b17', '#666666'
  ],
  schemeBlues: [
    <3 empty items>,
    [ '#deebf7', '#9ecae1', '#3182bd' ],
    [ '#eff3ff', '#bdd7e7', '#6baed6', '#2171b5' ],
    [ '#eff3ff', '#bdd7e7', '#6baed6', '#3182bd', '#08519c' ],
    [
      '#eff3ff',
      '#c6dbef',
      '#9ecae1',
      '#6baed6',
      '#3182bd',
      '#08519c'
    ],
    [
      '#eff3ff',
      '#c6dbef',
      '#9ecae1',
      '#6baed6',
      '#4292c6',
      '#2171b5',
      '#084594'
    ],
    [
      '#f7fbff', '#deebf7',
      '#c6dbef', '#9ecae1',
      '#6baed6', '#4292c6',
      '#2171b5', '#084594'
    ],
    [
      '#f7fbff', '#deebf7',
      '#c6dbef', '#9ecae1',
      '#6baed6', '#4292c6',
      '#2171b5', '#08519c',
      '#08306b'
    ]
  ],
  schemeBrBG: [
    <3 empty items>,
    [ '#d8b365', '#f5f5f5', '#5ab4ac' ],
    [ '#a6611a', '#dfc27d', '#80cdc1', '#018571' ],
    [ '#a6611a', '#dfc27d', '#f5f5f5', '#80cdc1', '#018571' ],
    [
      '#8c510a',
      '#d8b365',
      '#f6e8c3',
      '#c7eae5',
      '#5ab4ac',
      '#01665e'
    ],
    [
      '#8c510a',
      '#d8b365',
      '#f6e8c3',
      '#f5f5f5',
      '#c7eae5',
      '#5ab4ac',
      '#01665e'
    ],
    [
      '#8c510a', '#bf812d',
      '#dfc27d', '#f6e8c3',
      '#c7eae5', '#80cdc1',
      '#35978f', '#01665e'
    ],
    [
      '#8c510a', '#bf812d',
      '#dfc27d', '#f6e8c3',
      '#f5f5f5', '#c7eae5',
      '#80cdc1', '#35978f',
      '#01665e'
    ],
    [
      '#543005', '#8c510a',
      '#bf812d', '#dfc27d',
      '#f6e8c3', '#c7eae5',
      '#80cdc1', '#35978f',
      '#01665e', '#003c30'
    ],
    [
      '#543005', '#8c510a',
      '#bf812d', '#dfc27d',
      '#f6e8c3', '#f5f5f5',
      '#c7eae5', '#80cdc1',
      '#35978f', '#01665e',
      '#003c30'
    ]
  ],
  schemeBuGn: [
    <3 empty items>,
    [ '#e5f5f9', '#99d8c9', '#2ca25f' ],
    [ '#edf8fb', '#b2e2e2', '#66c2a4', '#238b45' ],
    [ '#edf8fb', '#b2e2e2', '#66c2a4', '#2ca25f', '#006d2c' ],
    [
      '#edf8fb',
      '#ccece6',
      '#99d8c9',
      '#66c2a4',
      '#2ca25f',
      '#006d2c'
    ],
    [
      '#edf8fb',
      '#ccece6',
      '#99d8c9',
      '#66c2a4',
      '#41ae76',
      '#238b45',
      '#005824'
    ],
    [
      '#f7fcfd', '#e5f5f9',
      '#ccece6', '#99d8c9',
      '#66c2a4', '#41ae76',
      '#238b45', '#005824'
    ],
    [
      '#f7fcfd', '#e5f5f9',
      '#ccece6', '#99d8c9',
      '#66c2a4', '#41ae76',
      '#238b45', '#006d2c',
      '#00441b'
    ]
  ],
  schemeBuPu: [
    <3 empty items>,
    [ '#e0ecf4', '#9ebcda', '#8856a7' ],
    [ '#edf8fb', '#b3cde3', '#8c96c6', '#88419d' ],
    [ '#edf8fb', '#b3cde3', '#8c96c6', '#8856a7', '#810f7c' ],
    [
      '#edf8fb',
      '#bfd3e6',
      '#9ebcda',
      '#8c96c6',
      '#8856a7',
      '#810f7c'
    ],
    [
      '#edf8fb',
      '#bfd3e6',
      '#9ebcda',
      '#8c96c6',
      '#8c6bb1',
      '#88419d',
      '#6e016b'
    ],
    [
      '#f7fcfd', '#e0ecf4',
      '#bfd3e6', '#9ebcda',
      '#8c96c6', '#8c6bb1',
      '#88419d', '#6e016b'
    ],
    [
      '#f7fcfd', '#e0ecf4',
      '#bfd3e6', '#9ebcda',
      '#8c96c6', '#8c6bb1',
      '#88419d', '#810f7c',
      '#4d004b'
    ]
  ],
  schemeCategory10: [
    '#1f77b4', '#ff7f0e',
    '#2ca02c', '#d62728',
    '#9467bd', '#8c564b',
    '#e377c2', '#7f7f7f',
    '#bcbd22', '#17becf'
  ],
  schemeDark2: [
    '#1b9e77', '#d95f02',
    '#7570b3', '#e7298a',
    '#66a61e', '#e6ab02',
    '#a6761d', '#666666'
  ],
  schemeGnBu: [
    <3 empty items>,
    [ '#e0f3db', '#a8ddb5', '#43a2ca' ],
    [ '#f0f9e8', '#bae4bc', '#7bccc4', '#2b8cbe' ],
    [ '#f0f9e8', '#bae4bc', '#7bccc4', '#43a2ca', '#0868ac' ],
    [
      '#f0f9e8',
      '#ccebc5',
      '#a8ddb5',
      '#7bccc4',
      '#43a2ca',
      '#0868ac'
    ],
    [
      '#f0f9e8',
      '#ccebc5',
      '#a8ddb5',
      '#7bccc4',
      '#4eb3d3',
      '#2b8cbe',
      '#08589e'
    ],
    [
      '#f7fcf0', '#e0f3db',
      '#ccebc5', '#a8ddb5',
      '#7bccc4', '#4eb3d3',
      '#2b8cbe', '#08589e'
    ],
    [
      '#f7fcf0', '#e0f3db',
      '#ccebc5', '#a8ddb5',
      '#7bccc4', '#4eb3d3',
      '#2b8cbe', '#0868ac',
      '#084081'
    ]
  ],
  schemeGreens: [
    <3 empty items>,
    [ '#e5f5e0', '#a1d99b', '#31a354' ],
    [ '#edf8e9', '#bae4b3', '#74c476', '#238b45' ],
    [ '#edf8e9', '#bae4b3', '#74c476', '#31a354', '#006d2c' ],
    [
      '#edf8e9',
      '#c7e9c0',
      '#a1d99b',
      '#74c476',
      '#31a354',
      '#006d2c'
    ],
    [
      '#edf8e9',
      '#c7e9c0',
      '#a1d99b',
      '#74c476',
      '#41ab5d',
      '#238b45',
      '#005a32'
    ],
    [
      '#f7fcf5', '#e5f5e0',
      '#c7e9c0', '#a1d99b',
      '#74c476', '#41ab5d',
      '#238b45', '#005a32'
    ],
    [
      '#f7fcf5', '#e5f5e0',
      '#c7e9c0', '#a1d99b',
      '#74c476', '#41ab5d',
      '#238b45', '#006d2c',
      '#00441b'
    ]
  ],
  schemeGreys: [
    <3 empty items>,
    [ '#f0f0f0', '#bdbdbd', '#636363' ],
    [ '#f7f7f7', '#cccccc', '#969696', '#525252' ],
    [ '#f7f7f7', '#cccccc', '#969696', '#636363', '#252525' ],
    [
      '#f7f7f7',
      '#d9d9d9',
      '#bdbdbd',
      '#969696',
      '#636363',
      '#252525'
    ],
    [
      '#f7f7f7',
      '#d9d9d9',
      '#bdbdbd',
      '#969696',
      '#737373',
      '#525252',
      '#252525'
    ],
    [
      '#ffffff', '#f0f0f0',
      '#d9d9d9', '#bdbdbd',
      '#969696', '#737373',
      '#525252', '#252525'
    ],
    [
      '#ffffff', '#f0f0f0',
      '#d9d9d9', '#bdbdbd',
      '#969696', '#737373',
      '#525252', '#252525',
      '#000000'
    ]
  ],
  schemeOrRd: [
    <3 empty items>,
    [ '#fee8c8', '#fdbb84', '#e34a33' ],
    [ '#fef0d9', '#fdcc8a', '#fc8d59', '#d7301f' ],
    [ '#fef0d9', '#fdcc8a', '#fc8d59', '#e34a33', '#b30000' ],
    [
      '#fef0d9',
      '#fdd49e',
      '#fdbb84',
      '#fc8d59',
      '#e34a33',
      '#b30000'
    ],
    [
      '#fef0d9',
      '#fdd49e',
      '#fdbb84',
      '#fc8d59',
      '#ef6548',
      '#d7301f',
      '#990000'
    ],
    [
      '#fff7ec', '#fee8c8',
      '#fdd49e', '#fdbb84',
      '#fc8d59', '#ef6548',
      '#d7301f', '#990000'
    ],
    [
      '#fff7ec', '#fee8c8',
      '#fdd49e', '#fdbb84',
      '#fc8d59', '#ef6548',
      '#d7301f', '#b30000',
      '#7f0000'
    ]
  ],
  schemeOranges: [
    <3 empty items>,
    [ '#fee6ce', '#fdae6b', '#e6550d' ],
    [ '#feedde', '#fdbe85', '#fd8d3c', '#d94701' ],
    [ '#feedde', '#fdbe85', '#fd8d3c', '#e6550d', '#a63603' ],
    [
      '#feedde',
      '#fdd0a2',
      '#fdae6b',
      '#fd8d3c',
      '#e6550d',
      '#a63603'
    ],
    [
      '#feedde',
      '#fdd0a2',
      '#fdae6b',
      '#fd8d3c',
      '#f16913',
      '#d94801',
      '#8c2d04'
    ],
    [
      '#fff5eb', '#fee6ce',
      '#fdd0a2', '#fdae6b',
      '#fd8d3c', '#f16913',
      '#d94801', '#8c2d04'
    ],
    [
      '#fff5eb', '#fee6ce',
      '#fdd0a2', '#fdae6b',
      '#fd8d3c', '#f16913',
      '#d94801', '#a63603',
      '#7f2704'
    ]
  ],
  schemePRGn: [
    <3 empty items>,
    [ '#af8dc3', '#f7f7f7', '#7fbf7b' ],
    [ '#7b3294', '#c2a5cf', '#a6dba0', '#008837' ],
    [ '#7b3294', '#c2a5cf', '#f7f7f7', '#a6dba0', '#008837' ],
    [
      '#762a83',
      '#af8dc3',
      '#e7d4e8',
      '#d9f0d3',
      '#7fbf7b',
      '#1b7837'
    ],
    [
      '#762a83',
      '#af8dc3',
      '#e7d4e8',
      '#f7f7f7',
      '#d9f0d3',
      '#7fbf7b',
      '#1b7837'
    ],
    [
      '#762a83', '#9970ab',
      '#c2a5cf', '#e7d4e8',
      '#d9f0d3', '#a6dba0',
      '#5aae61', '#1b7837'
    ],
    [
      '#762a83', '#9970ab',
      '#c2a5cf', '#e7d4e8',
      '#f7f7f7', '#d9f0d3',
      '#a6dba0', '#5aae61',
      '#1b7837'
    ],
    [
      '#40004b', '#762a83',
      '#9970ab', '#c2a5cf',
      '#e7d4e8', '#d9f0d3',
      '#a6dba0', '#5aae61',
      '#1b7837', '#00441b'
    ],
    [
      '#40004b', '#762a83',
      '#9970ab', '#c2a5cf',
      '#e7d4e8', '#f7f7f7',
      '#d9f0d3', '#a6dba0',
      '#5aae61', '#1b7837',
      '#00441b'
    ]
  ],
  schemePaired: [
    '#a6cee3', '#1f78b4',
    '#b2df8a', '#33a02c',
    '#fb9a99', '#e31a1c',
    '#fdbf6f', '#ff7f00',
    '#cab2d6', '#6a3d9a',
    '#ffff99', '#b15928'
  ],
  schemePastel1: [
    '#fbb4ae', '#b3cde3',
    '#ccebc5', '#decbe4',
    '#fed9a6', '#ffffcc',
    '#e5d8bd', '#fddaec',
    '#f2f2f2'
  ],
  schemePastel2: [
    '#b3e2cd', '#fdcdac',
    '#cbd5e8', '#f4cae4',
    '#e6f5c9', '#fff2ae',
    '#f1e2cc', '#cccccc'
  ],
  schemePiYG: [
    <3 empty items>,
    [ '#e9a3c9', '#f7f7f7', '#a1d76a' ],
    [ '#d01c8b', '#f1b6da', '#b8e186', '#4dac26' ],
    [ '#d01c8b', '#f1b6da', '#f7f7f7', '#b8e186', '#4dac26' ],
    [
      '#c51b7d',
      '#e9a3c9',
      '#fde0ef',
      '#e6f5d0',
      '#a1d76a',
      '#4d9221'
    ],
    [
      '#c51b7d',
      '#e9a3c9',
      '#fde0ef',
      '#f7f7f7',
      '#e6f5d0',
      '#a1d76a',
      '#4d9221'
    ],
    [
      '#c51b7d', '#de77ae',
      '#f1b6da', '#fde0ef',
      '#e6f5d0', '#b8e186',
      '#7fbc41', '#4d9221'
    ],
    [
      '#c51b7d', '#de77ae',
      '#f1b6da', '#fde0ef',
      '#f7f7f7', '#e6f5d0',
      '#b8e186', '#7fbc41',
      '#4d9221'
    ],
    [
      '#8e0152', '#c51b7d',
      '#de77ae', '#f1b6da',
      '#fde0ef', '#e6f5d0',
      '#b8e186', '#7fbc41',
      '#4d9221', '#276419'
    ],
    [
      '#8e0152', '#c51b7d',
      '#de77ae', '#f1b6da',
      '#fde0ef', '#f7f7f7',
      '#e6f5d0', '#b8e186',
      '#7fbc41', '#4d9221',
      '#276419'
    ]
  ],
  schemePuBu: [
    <3 empty items>,
    [ '#ece7f2', '#a6bddb', '#2b8cbe' ],
    [ '#f1eef6', '#bdc9e1', '#74a9cf', '#0570b0' ],
    [ '#f1eef6', '#bdc9e1', '#74a9cf', '#2b8cbe', '#045a8d' ],
    [
      '#f1eef6',
      '#d0d1e6',
      '#a6bddb',
      '#74a9cf',
      '#2b8cbe',
      '#045a8d'
    ],
    [
      '#f1eef6',
      '#d0d1e6',
      '#a6bddb',
      '#74a9cf',
      '#3690c0',
      '#0570b0',
      '#034e7b'
    ],
    [
      '#fff7fb', '#ece7f2',
      '#d0d1e6', '#a6bddb',
      '#74a9cf', '#3690c0',
      '#0570b0', '#034e7b'
    ],
    [
      '#fff7fb', '#ece7f2',
      '#d0d1e6', '#a6bddb',
      '#74a9cf', '#3690c0',
      '#0570b0', '#045a8d',
      '#023858'
    ]
  ],
  schemePuBuGn: [
    <3 empty items>,
    [ '#ece2f0', '#a6bddb', '#1c9099' ],
    [ '#f6eff7', '#bdc9e1', '#67a9cf', '#02818a' ],
    [ '#f6eff7', '#bdc9e1', '#67a9cf', '#1c9099', '#016c59' ],
    [
      '#f6eff7',
      '#d0d1e6',
      '#a6bddb',
      '#67a9cf',
      '#1c9099',
      '#016c59'
    ],
    [
      '#f6eff7',
      '#d0d1e6',
      '#a6bddb',
      '#67a9cf',
      '#3690c0',
      '#02818a',
      '#016450'
    ],
    [
      '#fff7fb', '#ece2f0',
      '#d0d1e6', '#a6bddb',
      '#67a9cf', '#3690c0',
      '#02818a', '#016450'
    ],
    [
      '#fff7fb', '#ece2f0',
      '#d0d1e6', '#a6bddb',
      '#67a9cf', '#3690c0',
      '#02818a', '#016c59',
      '#014636'
    ]
  ],
  schemePuOr: [
    <3 empty items>,
    [ '#998ec3', '#f7f7f7', '#f1a340' ],
    [ '#5e3c99', '#b2abd2', '#fdb863', '#e66101' ],
    [ '#5e3c99', '#b2abd2', '#f7f7f7', '#fdb863', '#e66101' ],
    [
      '#542788',
      '#998ec3',
      '#d8daeb',
      '#fee0b6',
      '#f1a340',
      '#b35806'
    ],
    [
      '#542788',
      '#998ec3',
      '#d8daeb',
      '#f7f7f7',
      '#fee0b6',
      '#f1a340',
      '#b35806'
    ],
    [
      '#542788', '#8073ac',
      '#b2abd2', '#d8daeb',
      '#fee0b6', '#fdb863',
      '#e08214', '#b35806'
    ],
    [
      '#542788', '#8073ac',
      '#b2abd2', '#d8daeb',
      '#f7f7f7', '#fee0b6',
      '#fdb863', '#e08214',
      '#b35806'
    ],
    [
      '#2d004b', '#542788',
      '#8073ac', '#b2abd2',
      '#d8daeb', '#fee0b6',
      '#fdb863', '#e08214',
      '#b35806', '#7f3b08'
    ],
    [
      '#2d004b', '#542788',
      '#8073ac', '#b2abd2',
      '#d8daeb', '#f7f7f7',
      '#fee0b6', '#fdb863',
      '#e08214', '#b35806',
      '#7f3b08'
    ]
  ],
  schemePuRd: [
    <3 empty items>,
    [ '#e7e1ef', '#c994c7', '#dd1c77' ],
    [ '#f1eef6', '#d7b5d8', '#df65b0', '#ce1256' ],
    [ '#f1eef6', '#d7b5d8', '#df65b0', '#dd1c77', '#980043' ],
    [
      '#f1eef6',
      '#d4b9da',
      '#c994c7',
      '#df65b0',
      '#dd1c77',
      '#980043'
    ],
    [
      '#f1eef6',
      '#d4b9da',
      '#c994c7',
      '#df65b0',
      '#e7298a',
      '#ce1256',
      '#91003f'
    ],
    [
      '#f7f4f9', '#e7e1ef',
      '#d4b9da', '#c994c7',
      '#df65b0', '#e7298a',
      '#ce1256', '#91003f'
    ],
    [
      '#f7f4f9', '#e7e1ef',
      '#d4b9da', '#c994c7',
      '#df65b0', '#e7298a',
      '#ce1256', '#980043',
      '#67001f'
    ]
  ],
  schemePurples: [
    <3 empty items>,
    [ '#efedf5', '#bcbddc', '#756bb1' ],
    [ '#f2f0f7', '#cbc9e2', '#9e9ac8', '#6a51a3' ],
    [ '#f2f0f7', '#cbc9e2', '#9e9ac8', '#756bb1', '#54278f' ],
    [
      '#f2f0f7',
      '#dadaeb',
      '#bcbddc',
      '#9e9ac8',
      '#756bb1',
      '#54278f'
    ],
    [
      '#f2f0f7',
      '#dadaeb',
      '#bcbddc',
      '#9e9ac8',
      '#807dba',
      '#6a51a3',
      '#4a1486'
    ],
    [
      '#fcfbfd', '#efedf5',
      '#dadaeb', '#bcbddc',
      '#9e9ac8', '#807dba',
      '#6a51a3', '#4a1486'
    ],
    [
      '#fcfbfd', '#efedf5',
      '#dadaeb', '#bcbddc',
      '#9e9ac8', '#807dba',
      '#6a51a3', '#54278f',
      '#3f007d'
    ]
  ],
  schemeRdBu: [
    <3 empty items>,
    [ '#ef8a62', '#f7f7f7', '#67a9cf' ],
    [ '#ca0020', '#f4a582', '#92c5de', '#0571b0' ],
    [ '#ca0020', '#f4a582', '#f7f7f7', '#92c5de', '#0571b0' ],
    [
      '#b2182b',
      '#ef8a62',
      '#fddbc7',
      '#d1e5f0',
      '#67a9cf',
      '#2166ac'
    ],
    [
      '#b2182b',
      '#ef8a62',
      '#fddbc7',
      '#f7f7f7',
      '#d1e5f0',
      '#67a9cf',
      '#2166ac'
    ],
    [
      '#b2182b', '#d6604d',
      '#f4a582', '#fddbc7',
      '#d1e5f0', '#92c5de',
      '#4393c3', '#2166ac'
    ],
    [
      '#b2182b', '#d6604d',
      '#f4a582', '#fddbc7',
      '#f7f7f7', '#d1e5f0',
      '#92c5de', '#4393c3',
      '#2166ac'
    ],
    [
      '#67001f', '#b2182b',
      '#d6604d', '#f4a582',
      '#fddbc7', '#d1e5f0',
      '#92c5de', '#4393c3',
      '#2166ac', '#053061'
    ],
    [
      '#67001f', '#b2182b',
      '#d6604d', '#f4a582',
      '#fddbc7', '#f7f7f7',
      '#d1e5f0', '#92c5de',
      '#4393c3', '#2166ac',
      '#053061'
    ]
  ],
  schemeRdGy: [
    <3 empty items>,
    [ '#ef8a62', '#ffffff', '#999999' ],
    [ '#ca0020', '#f4a582', '#bababa', '#404040' ],
    [ '#ca0020', '#f4a582', '#ffffff', '#bababa', '#404040' ],
    [
      '#b2182b',
      '#ef8a62',
      '#fddbc7',
      '#e0e0e0',
      '#999999',
      '#4d4d4d'
    ],
    [
      '#b2182b',
      '#ef8a62',
      '#fddbc7',
      '#ffffff',
      '#e0e0e0',
      '#999999',
      '#4d4d4d'
    ],
    [
      '#b2182b', '#d6604d',
      '#f4a582', '#fddbc7',
      '#e0e0e0', '#bababa',
      '#878787', '#4d4d4d'
    ],
    [
      '#b2182b', '#d6604d',
      '#f4a582', '#fddbc7',
      '#ffffff', '#e0e0e0',
      '#bababa', '#878787',
      '#4d4d4d'
    ],
    [
      '#67001f', '#b2182b',
      '#d6604d', '#f4a582',
      '#fddbc7', '#e0e0e0',
      '#bababa', '#878787',
      '#4d4d4d', '#1a1a1a'
    ],
    [
      '#67001f', '#b2182b',
      '#d6604d', '#f4a582',
      '#fddbc7', '#ffffff',
      '#e0e0e0', '#bababa',
      '#878787', '#4d4d4d',
      '#1a1a1a'
    ]
  ],
  schemeRdPu: [
    <3 empty items>,
    [ '#fde0dd', '#fa9fb5', '#c51b8a' ],
    [ '#feebe2', '#fbb4b9', '#f768a1', '#ae017e' ],
    [ '#feebe2', '#fbb4b9', '#f768a1', '#c51b8a', '#7a0177' ],
    [
      '#feebe2',
      '#fcc5c0',
      '#fa9fb5',
      '#f768a1',
      '#c51b8a',
      '#7a0177'
    ],
    [
      '#feebe2',
      '#fcc5c0',
      '#fa9fb5',
      '#f768a1',
      '#dd3497',
      '#ae017e',
      '#7a0177'
    ],
    [
      '#fff7f3', '#fde0dd',
      '#fcc5c0', '#fa9fb5',
      '#f768a1', '#dd3497',
      '#ae017e', '#7a0177'
    ],
    [
      '#fff7f3', '#fde0dd',
      '#fcc5c0', '#fa9fb5',
      '#f768a1', '#dd3497',
      '#ae017e', '#7a0177',
      '#49006a'
    ]
  ],
  schemeRdYlBu: [
    <3 empty items>,
    [ '#fc8d59', '#ffffbf', '#91bfdb' ],
    [ '#d7191c', '#fdae61', '#abd9e9', '#2c7bb6' ],
    [ '#d7191c', '#fdae61', '#ffffbf', '#abd9e9', '#2c7bb6' ],
    [
      '#d73027',
      '#fc8d59',
      '#fee090',
      '#e0f3f8',
      '#91bfdb',
      '#4575b4'
    ],
    [
      '#d73027',
      '#fc8d59',
      '#fee090',
      '#ffffbf',
      '#e0f3f8',
      '#91bfdb',
      '#4575b4'
    ],
    [
      '#d73027', '#f46d43',
      '#fdae61', '#fee090',
      '#e0f3f8', '#abd9e9',
      '#74add1', '#4575b4'
    ],
    [
      '#d73027', '#f46d43',
      '#fdae61', '#fee090',
      '#ffffbf', '#e0f3f8',
      '#abd9e9', '#74add1',
      '#4575b4'
    ],
    [
      '#a50026', '#d73027',
      '#f46d43', '#fdae61',
      '#fee090', '#e0f3f8',
      '#abd9e9', '#74add1',
      '#4575b4', '#313695'
    ],
    [
      '#a50026', '#d73027',
      '#f46d43', '#fdae61',
      '#fee090', '#ffffbf',
      '#e0f3f8', '#abd9e9',
      '#74add1', '#4575b4',
      '#313695'
    ]
  ],
  schemeRdYlGn: [
    <3 empty items>,
    [ '#fc8d59', '#ffffbf', '#91cf60' ],
    [ '#d7191c', '#fdae61', '#a6d96a', '#1a9641' ],
    [ '#d7191c', '#fdae61', '#ffffbf', '#a6d96a', '#1a9641' ],
    [
      '#d73027',
      '#fc8d59',
      '#fee08b',
      '#d9ef8b',
      '#91cf60',
      '#1a9850'
    ],
    [
      '#d73027',
      '#fc8d59',
      '#fee08b',
      '#ffffbf',
      '#d9ef8b',
      '#91cf60',
      '#1a9850'
    ],
    [
      '#d73027', '#f46d43',
      '#fdae61', '#fee08b',
      '#d9ef8b', '#a6d96a',
      '#66bd63', '#1a9850'
    ],
    [
      '#d73027', '#f46d43',
      '#fdae61', '#fee08b',
      '#ffffbf', '#d9ef8b',
      '#a6d96a', '#66bd63',
      '#1a9850'
    ],
    [
      '#a50026', '#d73027',
      '#f46d43', '#fdae61',
      '#fee08b', '#d9ef8b',
      '#a6d96a', '#66bd63',
      '#1a9850', '#006837'
    ],
    [
      '#a50026', '#d73027',
      '#f46d43', '#fdae61',
      '#fee08b', '#ffffbf',
      '#d9ef8b', '#a6d96a',
      '#66bd63', '#1a9850',
      '#006837'
    ]
  ],
  schemeReds: [
    <3 empty items>,
    [ '#fee0d2', '#fc9272', '#de2d26' ],
    [ '#fee5d9', '#fcae91', '#fb6a4a', '#cb181d' ],
    [ '#fee5d9', '#fcae91', '#fb6a4a', '#de2d26', '#a50f15' ],
    [
      '#fee5d9',
      '#fcbba1',
      '#fc9272',
      '#fb6a4a',
      '#de2d26',
      '#a50f15'
    ],
    [
      '#fee5d9',
      '#fcbba1',
      '#fc9272',
      '#fb6a4a',
      '#ef3b2c',
      '#cb181d',
      '#99000d'
    ],
    [
      '#fff5f0', '#fee0d2',
      '#fcbba1', '#fc9272',
      '#fb6a4a', '#ef3b2c',
      '#cb181d', '#99000d'
    ],
    [
      '#fff5f0', '#fee0d2',
      '#fcbba1', '#fc9272',
      '#fb6a4a', '#ef3b2c',
      '#cb181d', '#a50f15',
      '#67000d'
    ]
  ],
  schemeSet1: [
    '#e41a1c', '#377eb8',
    '#4daf4a', '#984ea3',
    '#ff7f00', '#ffff33',
    '#a65628', '#f781bf',
    '#999999'
  ],
  schemeSet2: [
    '#66c2a5', '#fc8d62',
    '#8da0cb', '#e78ac3',
    '#a6d854', '#ffd92f',
    '#e5c494', '#b3b3b3'
  ],
  schemeSet3: [
    '#8dd3c7', '#ffffb3',
    '#bebada', '#fb8072',
    '#80b1d3', '#fdb462',
    '#b3de69', '#fccde5',
    '#d9d9d9', '#bc80bd',
    '#ccebc5', '#ffed6f'
  ],
  schemeSpectral: [
    <3 empty items>,
    [ '#fc8d59', '#ffffbf', '#99d594' ],
    [ '#d7191c', '#fdae61', '#abdda4', '#2b83ba' ],
    [ '#d7191c', '#fdae61', '#ffffbf', '#abdda4', '#2b83ba' ],
    [
      '#d53e4f',
      '#fc8d59',
      '#fee08b',
      '#e6f598',
      '#99d594',
      '#3288bd'
    ],
    [
      '#d53e4f',
      '#fc8d59',
      '#fee08b',
      '#ffffbf',
      '#e6f598',
      '#99d594',
      '#3288bd'
    ],
    [
      '#d53e4f', '#f46d43',
      '#fdae61', '#fee08b',
      '#e6f598', '#abdda4',
      '#66c2a5', '#3288bd'
    ],
    [
      '#d53e4f', '#f46d43',
      '#fdae61', '#fee08b',
      '#ffffbf', '#e6f598',
      '#abdda4', '#66c2a5',
      '#3288bd'
    ],
    [
      '#9e0142', '#d53e4f',
      '#f46d43', '#fdae61',
      '#fee08b', '#e6f598',
      '#abdda4', '#66c2a5',
      '#3288bd', '#5e4fa2'
    ],
    [
      '#9e0142', '#d53e4f',
      '#f46d43', '#fdae61',
      '#fee08b', '#ffffbf',
      '#e6f598', '#abdda4',
      '#66c2a5', '#3288bd',
      '#5e4fa2'
    ]
  ],
  schemeTableau10: [
    '#4e79a7', '#f28e2c',
    '#e15759', '#76b7b2',
    '#59a14f', '#edc949',
    '#af7aa1', '#ff9da7',
    '#9c755f', '#bab0ab'
  ],
  schemeYlGn: [
    <3 empty items>,
    [ '#f7fcb9', '#addd8e', '#31a354' ],
    [ '#ffffcc', '#c2e699', '#78c679', '#238443' ],
    [ '#ffffcc', '#c2e699', '#78c679', '#31a354', '#006837' ],
    [
      '#ffffcc',
      '#d9f0a3',
      '#addd8e',
      '#78c679',
      '#31a354',
      '#006837'
    ],
    [
      '#ffffcc',
      '#d9f0a3',
      '#addd8e',
      '#78c679',
      '#41ab5d',
      '#238443',
      '#005a32'
    ],
    [
      '#ffffe5', '#f7fcb9',
      '#d9f0a3', '#addd8e',
      '#78c679', '#41ab5d',
      '#238443', '#005a32'
    ],
    [
      '#ffffe5', '#f7fcb9',
      '#d9f0a3', '#addd8e',
      '#78c679', '#41ab5d',
      '#238443', '#006837',
      '#004529'
    ]
  ],
  schemeYlGnBu: [
    <3 empty items>,
    [ '#edf8b1', '#7fcdbb', '#2c7fb8' ],
    [ '#ffffcc', '#a1dab4', '#41b6c4', '#225ea8' ],
    [ '#ffffcc', '#a1dab4', '#41b6c4', '#2c7fb8', '#253494' ],
    [
      '#ffffcc',
      '#c7e9b4',
      '#7fcdbb',
      '#41b6c4',
      '#2c7fb8',
      '#253494'
    ],
    [
      '#ffffcc',
      '#c7e9b4',
      '#7fcdbb',
      '#41b6c4',
      '#1d91c0',
      '#225ea8',
      '#0c2c84'
    ],
    [
      '#ffffd9', '#edf8b1',
      '#c7e9b4', '#7fcdbb',
      '#41b6c4', '#1d91c0',
      '#225ea8', '#0c2c84'
    ],
    [
      '#ffffd9', '#edf8b1',
      '#c7e9b4', '#7fcdbb',
      '#41b6c4', '#1d91c0',
      '#225ea8', '#253494',
      '#081d58'
    ]
  ],
  schemeYlOrBr: [
    <3 empty items>,
    [ '#fff7bc', '#fec44f', '#d95f0e' ],
    [ '#ffffd4', '#fed98e', '#fe9929', '#cc4c02' ],
    [ '#ffffd4', '#fed98e', '#fe9929', '#d95f0e', '#993404' ],
    [
      '#ffffd4',
      '#fee391',
      '#fec44f',
      '#fe9929',
      '#d95f0e',
      '#993404'
    ],
    [
      '#ffffd4',
      '#fee391',
      '#fec44f',
      '#fe9929',
      '#ec7014',
      '#cc4c02',
      '#8c2d04'
    ],
    [
      '#ffffe5', '#fff7bc',
      '#fee391', '#fec44f',
      '#fe9929', '#ec7014',
      '#cc4c02', '#8c2d04'
    ],
    [
      '#ffffe5', '#fff7bc',
      '#fee391', '#fec44f',
      '#fe9929', '#ec7014',
      '#cc4c02', '#993404',
      '#662506'
    ]
  ],
  schemeYlOrRd: [
    <3 empty items>,
    [ '#ffeda0', '#feb24c', '#f03b20' ],
    [ '#ffffb2', '#fecc5c', '#fd8d3c', '#e31a1c' ],
    [ '#ffffb2', '#fecc5c', '#fd8d3c', '#f03b20', '#bd0026' ],
    [
      '#ffffb2',
      '#fed976',
      '#feb24c',
      '#fd8d3c',
      '#f03b20',
      '#bd0026'
    ],
    [
      '#ffffb2',
      '#fed976',
      '#feb24c',
      '#fd8d3c',
      '#fc4e2a',
      '#e31a1c',
      '#b10026'
    ],
    [
      '#ffffcc', '#ffeda0',
      '#fed976', '#feb24c',
      '#fd8d3c', '#fc4e2a',
      '#e31a1c', '#b10026'
    ],
    [
      '#ffffcc', '#ffeda0',
      '#fed976', '#feb24c',
      '#fd8d3c', '#fc4e2a',
      '#e31a1c', '#bd0026',
      '#800026'
    ]
  ],
  select: [Function: default],
  selectAll: [Function: default],
  selection: [Function: selection],
  selector: [Function: default],
  selectorAll: [Function: default],
  shuffle: [Function: shuffle],
  shuffler: [Function: shuffler],
  some: [Function: some],
  sort: [Function: sort],
  stack: [Function: default],
  stackOffsetDiverging: [Function: default],
  stackOffsetExpand: [Function: default],
  stackOffsetNone: [Function: default],
  stackOffsetSilhouette: [Function: default],
  stackOffsetWiggle: [Function: default],
  stackOrderAppearance: [Function: default],
  stackOrderAscending: [Function: default],
  stackOrderDescending: [Function: default],
  stackOrderInsideOut: [Function: default],
  stackOrderNone: [Function: default],
  stackOrderReverse: [Function: default],
  stratify: [Function: default],
  style: [Function: styleValue],
  subset: [Function: subset],
  sum: [Function: sum],
  superset: [Function: superset],
  svg: [Function (anonymous)],
  symbol: [Function: Symbol],
  symbolAsterisk: { draw: [Function: draw] },
  symbolCircle: { draw: [Function: draw] },
  symbolCross: { draw: [Function: draw] },
  symbolDiamond: { draw: [Function: draw] },
  symbolDiamond2: { draw: [Function: draw] },
  symbolPlus: { draw: [Function: draw] },
  symbolSquare: { draw: [Function: draw] },
  symbolSquare2: { draw: [Function: draw] },
  symbolStar: { draw: [Function: draw] },
  symbolTriangle: { draw: [Function: draw] },
  symbolTriangle2: { draw: [Function: draw] },
  symbolWye: { draw: [Function: draw] },
  symbolX: { draw: [Function: draw] },
  symbols: [
    { draw: [Function: draw] },
    { draw: [Function: draw] },
    { draw: [Function: draw] },
    { draw: [Function: draw] },
    { draw: [Function: draw] },
    { draw: [Function: draw] },
    { draw: [Function: draw] }
  ],
  symbolsFill: [
    { draw: [Function: draw] },
    { draw: [Function: draw] },
    { draw: [Function: draw] },
    { draw: [Function: draw] },
    { draw: [Function: draw] },
    { draw: [Function: draw] },
    { draw: [Function: draw] }
  ],
  symbolsStroke: [
    { draw: [Function: draw] },
    { draw: [Function: draw] },
    { draw: [Function: draw] },
    { draw: [Function: draw] },
    { draw: [Function: draw] },
    { draw: [Function: draw] },
    { draw: [Function: draw] }
  ],
  text: [Function: default],
  thresholdFreedmanDiaconis: [Function: thresholdFreedmanDiaconis],
  thresholdScott: [Function: thresholdScott],
  thresholdSturges: [Function: thresholdSturges],
  tickFormat: [Function: tickFormat],
  tickIncrement: [Function: tickIncrement],
  tickStep: [Function: tickStep],
  ticks: [Function: ticks],
  timeDay: [Function: interval] {
    floor: [Function (anonymous)],
    ceil: [Function (anonymous)],
    round: [Function (anonymous)],
    offset: [Function (anonymous)],
    range: [Function (anonymous)],
    filter: [Function (anonymous)],
    count: [Function (anonymous)],
    every: [Function (anonymous)]
  },
  timeDays: [Function (anonymous)],
  timeFormat: [Function: format],
  timeFormatDefaultLocale: [Function: defaultLocale],
  timeFormatLocale: [Function: formatLocale],
  timeFriday: [Function: interval] {
    floor: [Function (anonymous)],
    ceil: [Function (anonymous)],
    round: [Function (anonymous)],
    offset: [Function (anonymous)],
    range: [Function (anonymous)],
    filter: [Function (anonymous)],
    count: [Function (anonymous)],
    every: [Function (anonymous)]
  },
  timeFridays: [Function (anonymous)],
  timeHour: [Function: interval] {
    floor: [Function (anonymous)],
    ceil: [Function (anonymous)],
    round: [Function (anonymous)],
    offset: [Function (anonymous)],
    range: [Function (anonymous)],
    filter: [Function (anonymous)],
    count: [Function (anonymous)],
    every: [Function (anonymous)]
  },
  timeHours: [Function (anonymous)],
  timeInterval: [Function: newInterval],
  timeMillisecond: [Function: interval] {
    floor: [Function (anonymous)],
    ceil: [Function (anonymous)],
    round: [Function (anonymous)],
    offset: [Function (anonymous)],
    range: [Function (anonymous)],
    filter: [Function (anonymous)],
    count: [Function (anonymous)],
    every: [Function (anonymous)]
  },
  timeMilliseconds: [Function (anonymous)],
  timeMinute: [Function: interval] {
    floor: [Function (anonymous)],
    ceil: [Function (anonymous)],
    round: [Function (anonymous)],
    offset: [Function (anonymous)],
    range: [Function (anonymous)],
    filter: [Function (anonymous)],
    count: [Function (anonymous)],
    every: [Function (anonymous)]
  },
  timeMinutes: [Function (anonymous)],
  timeMonday: [Function: interval] {
    floor: [Function (anonymous)],
    ceil: [Function (anonymous)],
    round: [Function (anonymous)],
    offset: [Function (anonymous)],
    range: [Function (anonymous)],
    filter: [Function (anonymous)],
    count: [Function (anonymous)],
    every: [Function (anonymous)]
  },
  timeMondays: [Function (anonymous)],
  timeMonth: [Function: interval] {
    floor: [Function (anonymous)],
    ceil: [Function (anonymous)],
    round: [Function (anonymous)],
    offset: [Function (anonymous)],
    range: [Function (anonymous)],
    filter: [Function (anonymous)],
    count: [Function (anonymous)],
    every: [Function (anonymous)]
  },
  timeMonths: [Function (anonymous)],
  timeParse: [Function: parse],
  timeSaturday: [Function: interval] {
    floor: [Function (anonymous)],
    ceil: [Function (anonymous)],
    round: [Function (anonymous)],
    offset: [Function (anonymous)],
    range: [Function (anonymous)],
    filter: [Function (anonymous)],
    count: [Function (anonymous)],
    every: [Function (anonymous)]
  },
  timeSaturdays: [Function (anonymous)],
  timeSecond: [Function: interval] {
    floor: [Function (anonymous)],
    ceil: [Function (anonymous)],
    round: [Function (anonymous)],
    offset: [Function (anonymous)],
    range: [Function (anonymous)],
    filter: [Function (anonymous)],
    count: [Function (anonymous)],
    every: [Function (anonymous)]
  },
  timeSeconds: [Function (anonymous)],
  timeSunday: [Function: interval] {
    floor: [Function (anonymous)],
    ceil: [Function (anonymous)],
    round: [Function (anonymous)],
    offset: [Function (anonymous)],
    range: [Function (anonymous)],
    filter: [Function (anonymous)],
    count: [Function (anonymous)],
    every: [Function (anonymous)]
  },
  timeSundays: [Function (anonymous)],
  timeThursday: [Function: interval] {
    floor: [Function (anonymous)],
    ceil: [Function (anonymous)],
    round: [Function (anonymous)],
    offset: [Function (anonymous)],
    range: [Function (anonymous)],
    filter: [Function (anonymous)],
    count: [Function (anonymous)],
    every: [Function (anonymous)]
  },
  timeThursdays: [Function (anonymous)],
  timeTickInterval: [Function: tickInterval],
  timeTicks: [Function: ticks],
  timeTuesday: [Function: interval] {
    floor: [Function (anonymous)],
    ceil: [Function (anonymous)],
    round: [Function (anonymous)],
    offset: [Function (anonymous)],
    range: [Function (anonymous)],
    filter: [Function (anonymous)],
    count: [Function (anonymous)],
    every: [Function (anonymous)]
  },
  timeTuesdays: [Function (anonymous)],
  timeWednesday: [Function: interval] {
    floor: [Function (anonymous)],
    ceil: [Function (anonymous)],
    round: [Function (anonymous)],
    offset: [Function (anonymous)],
    range: [Function (anonymous)],
    filter: [Function (anonymous)],
    count: [Function (anonymous)],
    every: [Function (anonymous)]
  },
  timeWednesdays: [Function (anonymous)],
  timeWeek: [Function: interval] {
    floor: [Function (anonymous)],
    ceil: [Function (anonymous)],
    round: [Function (anonymous)],
    offset: [Function (anonymous)],
    range: [Function (anonymous)],
    filter: [Function (anonymous)],
    count: [Function (anonymous)],
    every: [Function (anonymous)]
  },
  timeWeeks: [Function (anonymous)],
  timeYear: [Function: interval] {
    floor: [Function (anonymous)],
    ceil: [Function (anonymous)],
    round: [Function (anonymous)],
    offset: [Function (anonymous)],
    range: [Function (anonymous)],
    filter: [Function (anonymous)],
    count: [Function (anonymous)],
    every: [Function (anonymous)]
  },
  timeYears: [Function (anonymous)],
  timeout: [Function: default],
  timer: [Function: timer],
  timerFlush: [Function: timerFlush],
  transition: [Function: transition],
  transpose: [Function: transpose],
  tree: [Function: default],
  treemap: [Function: default],
  treemapBinary: [Function: default],
  treemapDice: [Function: default],
  treemapResquarify: [Function: resquarify] { ratio: [Function (anonymous)] },
  treemapSlice: [Function: default],
  treemapSliceDice: [Function: default],
  treemapSquarify: [Function: squarify] { ratio: [Function (anonymous)] },
  tsv: [Function (anonymous)],
  tsvFormat: [Function: format],
  tsvFormatBody: [Function: formatBody],
  tsvFormatRow: [Function: formatRow],
  tsvFormatRows: [Function: formatRows],
  tsvFormatValue: [Function: formatValue],
  tsvParse: [Function: parse],
  tsvParseRows: [Function: parseRows],
  union: [Function: union],
  utcDay: [Function: interval] {
    floor: [Function (anonymous)],
    ceil: [Function (anonymous)],
    round: [Function (anonymous)],
    offset: [Function (anonymous)],
    range: [Function (anonymous)],
    filter: [Function (anonymous)],
    count: [Function (anonymous)],
    every: [Function (anonymous)]
  },
  utcDays: [Function (anonymous)],
  utcFormat: [Function: utcFormat],
  utcFriday: [Function: interval] {
    floor: [Function (anonymous)],
    ceil: [Function (anonymous)],
    round: [Function (anonymous)],
    offset: [Function (anonymous)],
    range: [Function (anonymous)],
    filter: [Function (anonymous)],
    count: [Function (anonymous)],
    every: [Function (anonymous)]
  },
  utcFridays: [Function (anonymous)],
  utcHour: [Function: interval] {
    floor: [Function (anonymous)],
    ceil: [Function (anonymous)],
    round: [Function (anonymous)],
    offset: [Function (anonymous)],
    range: [Function (anonymous)],
    filter: [Function (anonymous)],
    count: [Function (anonymous)],
    every: [Function (anonymous)]
  },
  utcHours: [Function (anonymous)],
  utcMillisecond: [Function: interval] {
    floor: [Function (anonymous)],
    ceil: [Function (anonymous)],
    round: [Function (anonymous)],
    offset: [Function (anonymous)],
    range: [Function (anonymous)],
    filter: [Function (anonymous)],
    count: [Function (anonymous)],
    every: [Function (anonymous)]
  },
  utcMilliseconds: [Function (anonymous)],
  utcMinute: [Function: interval] {
    floor: [Function (anonymous)],
    ceil: [Function (anonymous)],
    round: [Function (anonymous)],
    offset: [Function (anonymous)],
    range: [Function (anonymous)],
    filter: [Function (anonymous)],
    count: [Function (anonymous)],
    every: [Function (anonymous)]
  },
  utcMinutes: [Function (anonymous)],
  utcMonday: [Function: interval] {
    floor: [Function (anonymous)],
    ceil: [Function (anonymous)],
    round: [Function (anonymous)],
    offset: [Function (anonymous)],
    range: [Function (anonymous)],
    filter: [Function (anonymous)],
    count: [Function (anonymous)],
    every: [Function (anonymous)]
  },
  utcMondays: [Function (anonymous)],
  utcMonth: [Function: interval] {
    floor: [Function (anonymous)],
    ceil: [Function (anonymous)],
    round: [Function (anonymous)],
    offset: [Function (anonymous)],
    range: [Function (anonymous)],
    filter: [Function (anonymous)],
    count: [Function (anonymous)],
    every: [Function (anonymous)]
  },
  utcMonths: [Function (anonymous)],
  utcParse: [Function: utcParse],
  utcSaturday: [Function: interval] {
    floor: [Function (anonymous)],
    ceil: [Function (anonymous)],
    round: [Function (anonymous)],
    offset: [Function (anonymous)],
    range: [Function (anonymous)],
    filter: [Function (anonymous)],
    count: [Function (anonymous)],
    every: [Function (anonymous)]
  },
  utcSaturdays: [Function (anonymous)],
  utcSecond: [Function: interval] {
    floor: [Function (anonymous)],
    ceil: [Function (anonymous)],
    round: [Function (anonymous)],
    offset: [Function (anonymous)],
    range: [Function (anonymous)],
    filter: [Function (anonymous)],
    count: [Function (anonymous)],
    every: [Function (anonymous)]
  },
  utcSeconds: [Function (anonymous)],
  utcSunday: [Function: interval] {
    floor: [Function (anonymous)],
    ceil: [Function (anonymous)],
    round: [Function (anonymous)],
    offset: [Function (anonymous)],
    range: [Function (anonymous)],
    filter: [Function (anonymous)],
    count: [Function (anonymous)],
    every: [Function (anonymous)]
  },
  utcSundays: [Function (anonymous)],
  utcThursday: [Function: interval] {
    floor: [Function (anonymous)],
    ceil: [Function (anonymous)],
    round: [Function (anonymous)],
    offset: [Function (anonymous)],
    range: [Function (anonymous)],
    filter: [Function (anonymous)],
    count: [Function (anonymous)],
    every: [Function (anonymous)]
  },
  utcThursdays: [Function (anonymous)],
  utcTickInterval: [Function: tickInterval],
  utcTicks: [Function: ticks],
  utcTuesday: [Function: interval] {
    floor: [Function (anonymous)],
    ceil: [Function (anonymous)],
    round: [Function (anonymous)],
    offset: [Function (anonymous)],
    range: [Function (anonymous)],
    filter: [Function (anonymous)],
    count: [Function (anonymous)],
    every: [Function (anonymous)]
  },
  utcTuesdays: [Function (anonymous)],
  utcWednesday: [Function: interval] {
    floor: [Function (anonymous)],
    ceil: [Function (anonymous)],
    round: [Function (anonymous)],
    offset: [Function (anonymous)],
    range: [Function (anonymous)],
    filter: [Function (anonymous)],
    count: [Function (anonymous)],
    every: [Function (anonymous)]
  },
  utcWednesdays: [Function (anonymous)],
  utcWeek: [Function: interval] {
    floor: [Function (anonymous)],
    ceil: [Function (anonymous)],
    round: [Function (anonymous)],
    offset: [Function (anonymous)],
    range: [Function (anonymous)],
    filter: [Function (anonymous)],
    count: [Function (anonymous)],
    every: [Function (anonymous)]
  },
  utcWeeks: [Function (anonymous)],
  utcYear: [Function: interval] {
    floor: [Function (anonymous)],
    ceil: [Function (anonymous)],
    round: [Function (anonymous)],
    offset: [Function (anonymous)],
    range: [Function (anonymous)],
    filter: [Function (anonymous)],
    count: [Function (anonymous)],
    every: [Function (anonymous)]
  },
  utcYears: [Function (anonymous)],
  variance: [Function: variance],
  window: [Function: default],
  xml: [Function (anonymous)],
  zip: [Function: zip],
  zoom: [Function: default],
  zoomIdentity: Transform { k: 1, x: 0, y: 0 },
  zoomTransform: [Function: transform]
}
info  - Generating static pages (9/12)
Warning: data for page "/gnosis/[addr]" is 632 kB which exceeds the threshold of 128 kB, this amount of data can reduce performance.
See more info here: https://nextjs.org/docs/messages/large-page-data
Warning: data for page "/overviewpage/[name]" is 130 kB which exceeds the threshold of 128 kB, this amount of data can reduce performance.
See more info here: https://nextjs.org/docs/messages/large-page-data
info  - Generating static pages (12/12)

> Build error occurred
Error: Export encountered errors on following paths:
	/gnosis/[addr]: /gnosis
	/overviewpage/[name]: /overviewpage
    at /Users/umphaipunatipunumphai/Documents/blockcamp2/node_modules/next/dist/export/index.js:395:19
    at processTicksAndRejections (node:internal/process/task_queues:96:5)
    at async Span.traceAsyncFn (/Users/umphaipunatipunumphai/Documents/blockcamp2/node_modules/next/dist/trace/trace.js:79:20)
    at async /Users/umphaipunatipunumphai/Documents/blockcamp2/node_modules/next/dist/build/index.js:1094:21
    at async Span.traceAsyncFn (/Users/umphaipunatipunumphai/Documents/blockcamp2/node_modules/next/dist/trace/trace.js:79:20)
    at async /Users/umphaipunatipunumphai/Documents/blockcamp2/node_modules/next/dist/build/index.js:971:17
    at async Span.traceAsyncFn (/Users/umphaipunatipunumphai/Documents/blockcamp2/node_modules/next/dist/trace/trace.js:79:20)
    at async Object.build [as default] (/Users/umphaipunatipunumphai/Documents/blockcamp2/node_modules/next/dist/build/index.js:64:29)
error Command failed with exit code 1.
info Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.
